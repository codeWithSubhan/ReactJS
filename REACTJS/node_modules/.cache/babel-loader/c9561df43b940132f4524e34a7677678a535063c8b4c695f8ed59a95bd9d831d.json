{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuchbi\\\\OneDrive\\\\Desktop\\\\REACTJS UDEMY COURSE\\\\REACTJS\\\\src\\\\API YOUTUBE\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Post from './Post';\nimport Get from './Get';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [status, setStatus] = useState(true);\n  const [userId, setUserId] = useState(null);\n  const [show, setShow] = useState(false);\n\n  // API CALL\n  function handleData() {\n    fetch('http://localhost:9000/ApiYoutube').then(res => res.json()).then(data => {\n      setData(data);\n    });\n  }\n\n  // API ADDED\n  function handleAddUser() {\n    if (!name || !password || !email) {\n      alert(`filed can not be empty`);\n      return;\n    }\n    const data = {\n      name,\n      email,\n      password\n    };\n    fetch('http://localhost:9000/ApiYoutube', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json().then(() => {\n      handleData();\n      setName('');\n      setEmail('');\n      setPassword('');\n    }));\n  }\n\n  // API DELETED\n  function handleDeleteUSer(id) {\n    fetch(`http://localhost:9000/ApiYoutube/${id}`, {\n      method: 'DELETE'\n    }).then(res => res.json().then(() => handleData()));\n  }\n\n  // Edit existing data\n  function preFiled(id) {\n    const user = data.find(item => item.id === id);\n    const {\n      name,\n      email,\n      password\n    } = user;\n    setName(name);\n    setEmail(email);\n    setPassword(password);\n    setStatus('update');\n    setUserId(id);\n  }\n\n  // API UPDATED\n  function updateData() {\n    const updatedUser = {\n      name,\n      email,\n      password\n    };\n    console.log(updatedUser);\n    fetch(`http://localhost:9000/ApiYoutube/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedUser)\n    }).then(res => res.json()).then(() => {\n      handleData();\n      setName('');\n      setEmail('');\n      setPassword('');\n    });\n  }\n  function hanldeCreateUser() {\n    setStatus(false);\n    setName('');\n    setEmail('');\n    setPassword('');\n  }\n  function handleModal(id) {\n    setShow(show => !show);\n    setUserId(id);\n  }\n  useEffect(() => {\n    handleData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Flex\",\n    children: [/*#__PURE__*/_jsxDEV(Get, {\n      data: data,\n      setData: setData,\n      handleData: handleData,\n      handleDeleteUSer: handleDeleteUSer,\n      preFiled: preFiled,\n      hanldeCreateUser: hanldeCreateUser,\n      handleModal: handleModal,\n      show: show,\n      setShow: setShow,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Post, {\n      name: name,\n      setName: setName,\n      password: password,\n      setPassword: setPassword,\n      email: email,\n      setEmail: setEmail,\n      handleAddUser: handleAddUser,\n      status: status,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nkh+WQGsNXmelfUDzKfp2QjU1JI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Post","Get","jsxDEV","_jsxDEV","App","_s","data","setData","name","setName","email","setEmail","password","setPassword","status","setStatus","userId","setUserId","show","setShow","handleData","fetch","then","res","json","handleAddUser","alert","method","headers","Accept","body","JSON","stringify","handleDeleteUSer","id","preFiled","user","find","item","updateData","updatedUser","console","log","hanldeCreateUser","handleModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kuchbi/OneDrive/Desktop/REACTJS UDEMY COURSE/REACTJS/src/API YOUTUBE/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Post from './Post';\r\nimport Get from './Get';\r\nimport './style.css';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [status, setStatus] = useState(true);\r\n  const [userId, setUserId] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n\r\n  // API CALL\r\n  function handleData() {\r\n    fetch('http://localhost:9000/ApiYoutube')\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }\r\n\r\n  // API ADDED\r\n  function handleAddUser() {\r\n    if (!name || !password || !email) {\r\n      alert(`filed can not be empty`);\r\n      return;\r\n    }\r\n    const data = { name, email, password };\r\n    fetch('http://localhost:9000/ApiYoutube', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then((res) =>\r\n      res.json().then(() => {\r\n        handleData();\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n      })\r\n    );\r\n  }\r\n\r\n  // API DELETED\r\n  function handleDeleteUSer(id) {\r\n    fetch(`http://localhost:9000/ApiYoutube/${id}`, {\r\n      method: 'DELETE',\r\n    }).then((res) => res.json().then(() => handleData()));\r\n  }\r\n\r\n  // Edit existing data\r\n  function preFiled(id) {\r\n    const user = data.find((item) => item.id === id);\r\n    const { name, email, password } = user;\r\n\r\n    setName(name);\r\n    setEmail(email);\r\n    setPassword(password);\r\n    setStatus('update');\r\n    setUserId(id);\r\n  }\r\n\r\n  // API UPDATED\r\n  function updateData() {\r\n    const updatedUser = {\r\n      name,\r\n      email,\r\n      password,\r\n    };\r\n    console.log(updatedUser);\r\n    fetch(`http://localhost:9000/ApiYoutube/${userId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedUser),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(() => {\r\n        handleData();\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n      });\r\n  }\r\n\r\n  function hanldeCreateUser() {\r\n    setStatus(false);\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n  function handleModal(id) {\r\n    setShow((show) => !show);\r\n    setUserId(id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='Flex'>\r\n      <Get\r\n        data={data}\r\n        setData={setData}\r\n        handleData={handleData}\r\n        handleDeleteUSer={handleDeleteUSer}\r\n        preFiled={preFiled}\r\n        hanldeCreateUser={hanldeCreateUser}\r\n        handleModal={handleModal}\r\n        show={show}\r\n        setShow={setShow}\r\n        userId={userId}\r\n      />\r\n      <Post\r\n        name={name}\r\n        setName={setName}\r\n        password={password}\r\n        setPassword={setPassword}\r\n        email={email}\r\n        setEmail={setEmail}\r\n        handleAddUser={handleAddUser}\r\n        status={status}\r\n        updateData={updateData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}