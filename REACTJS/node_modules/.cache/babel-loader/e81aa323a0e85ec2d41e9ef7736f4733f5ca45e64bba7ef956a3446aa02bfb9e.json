{"ast":null,"code":"const initialStateAccount = {\n  balance: 0,\n  loan: 0,\n  loanPurpose: \"\",\n  isLoading: false\n};\nexport default function accountReducer(state = initialStateAccount, action) {\n  switch (action.type) {\n    case \"account/deposit\":\n      return {\n        ...state,\n        balance: state.balance + action.payload,\n        isLoading: false\n      };\n    case \"account/withdraw\":\n      return {\n        ...state,\n        balance: state.balance - action.payload\n      };\n    case \"account/requestLoan\":\n      if (state.loan > 0) return state;\n      return {\n        ...state,\n        loan: action.payload.amount,\n        loanPurpose: action.payload.purpose,\n        balance: state.balance + action.payload.amount\n      };\n    case \"account/payLoan\":\n      return {\n        ...state,\n        loan: 0,\n        loanPurpose: \"\",\n        balance: state.balance - state.loan\n      };\n    case \"account/convertingCurrency\":\n      return {\n        ...state,\n        isLoading: true\n      };\n    default:\n      return state;\n  }\n}\nexport function deposit(amount, currency) {\n  if (currency === \"USD\") return {\n    type: \"account/deposit\",\n    payload: amount\n  };\n\n  // if we return a function in action redux assume it's asynchronous action that we want to execute before dispatching\n  // anything to the store\n  // IT'S REALY MIDDLEWARE\n  return async function (dispatch, getState) {\n    dispatch({\n      type: \"account/convertingCurrency\"\n    });\n    const res = await fetch(`https://api.frankfurter.app/latest?amount=${amount}&from=${currency}&to=USD`);\n    const data = await res.json();\n    const converted = data.rates.USD;\n    dispatch({\n      type: \"account/deposit\",\n      payload: converted\n    });\n    console.log(converted);\n  };\n}\nexport function withdraw(amount) {\n  return {\n    type: \"account/withdraw\",\n    payload: amount\n  };\n}\nexport function requestLoan(amount, purpose) {\n  return {\n    type: \"account/requestLoan\",\n    payload: {\n      amount: amount,\n      purpose: purpose\n    }\n  };\n}\nexport function payLoan() {\n  return {\n    type: \"account/payLoan\"\n  };\n}","map":{"version":3,"names":["initialStateAccount","balance","loan","loanPurpose","isLoading","accountReducer","state","action","type","payload","amount","purpose","deposit","currency","dispatch","getState","res","fetch","data","json","converted","rates","USD","console","log","withdraw","requestLoan","payLoan"],"sources":["C:/Users/kuchbi/OneDrive/Desktop/REACTJS UDEMY COURSE/REACTJS/src/20 redux/features/accounts/accountSlice.js"],"sourcesContent":["const initialStateAccount = {\r\n  balance: 0,\r\n  loan: 0,\r\n  loanPurpose: \"\",\r\n  isLoading: false,\r\n};\r\nexport default function accountReducer(state = initialStateAccount, action) {\r\n  switch (action.type) {\r\n    case \"account/deposit\":\r\n      return {\r\n        ...state,\r\n        balance: state.balance + action.payload,\r\n        isLoading: false,\r\n      };\r\n    case \"account/withdraw\":\r\n      return {\r\n        ...state,\r\n        balance: state.balance - action.payload,\r\n      };\r\n    case \"account/requestLoan\":\r\n      if (state.loan > 0) return state;\r\n      return {\r\n        ...state,\r\n        loan: action.payload.amount,\r\n        loanPurpose: action.payload.purpose,\r\n        balance: state.balance + action.payload.amount,\r\n      };\r\n    case \"account/payLoan\":\r\n      return {\r\n        ...state,\r\n        loan: 0,\r\n        loanPurpose: \"\",\r\n        balance: state.balance - state.loan,\r\n      };\r\n    case \"account/convertingCurrency\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport function deposit(amount, currency) {\r\n  if (currency === \"USD\")\r\n    return {\r\n      type: \"account/deposit\",\r\n      payload: amount,\r\n    };\r\n\r\n  // if we return a function in action redux assume it's asynchronous action that we want to execute before dispatching\r\n  // anything to the store\r\n  // IT'S REALY MIDDLEWARE\r\n  return async function (dispatch, getState) {\r\n    dispatch({ type: \"account/convertingCurrency\" });\r\n\r\n    const res = await fetch(\r\n      `https://api.frankfurter.app/latest?amount=${amount}&from=${currency}&to=USD`\r\n    );\r\n    const data = await res.json();\r\n    const converted = data.rates.USD;\r\n\r\n    dispatch({ type: \"account/deposit\", payload: converted });\r\n    console.log(converted);\r\n  };\r\n}\r\nexport function withdraw(amount) {\r\n  return {\r\n    type: \"account/withdraw\",\r\n    payload: amount,\r\n  };\r\n}\r\nexport function requestLoan(amount, purpose) {\r\n  return {\r\n    type: \"account/requestLoan\",\r\n    payload: { amount: amount, purpose: purpose },\r\n  };\r\n}\r\nexport function payLoan() {\r\n  return {\r\n    type: \"account/payLoan\",\r\n  };\r\n}\r\n"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG;EAC1BC,OAAO,EAAE,CAAC;EACVC,IAAI,EAAE,CAAC;EACPC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE;AACb,CAAC;AACD,eAAe,SAASC,cAAcA,CAACC,KAAK,GAAGN,mBAAmB,EAAEO,MAAM,EAAE;EAC1E,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGF,KAAK;QACRL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACE,OAAO;QACvCL,SAAS,EAAE;MACb,CAAC;IACH,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGE,KAAK;QACRL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACE;MAClC,CAAC;IACH,KAAK,qBAAqB;MACxB,IAAIH,KAAK,CAACJ,IAAI,GAAG,CAAC,EAAE,OAAOI,KAAK;MAChC,OAAO;QACL,GAAGA,KAAK;QACRJ,IAAI,EAAEK,MAAM,CAACE,OAAO,CAACC,MAAM;QAC3BP,WAAW,EAAEI,MAAM,CAACE,OAAO,CAACE,OAAO;QACnCV,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACE,OAAO,CAACC;MAC1C,CAAC;IACH,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGJ,KAAK;QACRJ,IAAI,EAAE,CAAC;QACPC,WAAW,EAAE,EAAE;QACfF,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGK,KAAK,CAACJ;MACjC,CAAC;IACH,KAAK,4BAA4B;MAC/B,OAAO;QACL,GAAGI,KAAK;QACRF,SAAS,EAAE;MACb,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF;AACA,OAAO,SAASM,OAAOA,CAACF,MAAM,EAAEG,QAAQ,EAAE;EACxC,IAAIA,QAAQ,KAAK,KAAK,EACpB,OAAO;IACLL,IAAI,EAAE,iBAAiB;IACvBC,OAAO,EAAEC;EACX,CAAC;;EAEH;EACA;EACA;EACA,OAAO,gBAAgBI,QAAQ,EAAEC,QAAQ,EAAE;IACzCD,QAAQ,CAAC;MAAEN,IAAI,EAAE;IAA6B,CAAC,CAAC;IAEhD,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CACpB,6CAA4CP,MAAO,SAAQG,QAAS,SACvE,CAAC;IACD,MAAMK,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7B,MAAMC,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACC,GAAG;IAEhCR,QAAQ,CAAC;MAAEN,IAAI,EAAE,iBAAiB;MAAEC,OAAO,EAAEW;IAAU,CAAC,CAAC;IACzDG,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;EACxB,CAAC;AACH;AACA,OAAO,SAASK,QAAQA,CAACf,MAAM,EAAE;EAC/B,OAAO;IACLF,IAAI,EAAE,kBAAkB;IACxBC,OAAO,EAAEC;EACX,CAAC;AACH;AACA,OAAO,SAASgB,WAAWA,CAAChB,MAAM,EAAEC,OAAO,EAAE;EAC3C,OAAO;IACLH,IAAI,EAAE,qBAAqB;IAC3BC,OAAO,EAAE;MAAEC,MAAM,EAAEA,MAAM;MAAEC,OAAO,EAAEA;IAAQ;EAC9C,CAAC;AACH;AACA,OAAO,SAASgB,OAAOA,CAAA,EAAG;EACxB,OAAO;IACLnB,IAAI,EAAE;EACR,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}