{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// mordern way of redux toolskit\nconst initialState = {\n  balance: 0,\n  loan: 0,\n  loanPurpose: \"\",\n  isLoading: false\n};\nconst accountSlice = createSlice({\n  name: \"account\",\n  initialState,\n  reducers: {\n    deposit(state, action) {\n      state.balance = state.balance + action.payload;\n    },\n    withdraw(state, action) {\n      state.balance -= action.payload;\n    },\n    requestLoan(state, action) {\n      if (state.loan > 0) return;\n      state.loan = action.payload.amount;\n      state.loanPurpose = action.payload.purpose;\n      state.balance = action.balance + action.payload.amount;\n    },\n    payLoan(state, action) {\n      if (state.loan > 0) return;\n      state.loanPurpose = \"\";\n      state.balance -= state.loan;\n      state.loan = 0;\n    }\n  }\n});\nconsole.log(accountSlice);\nexport const {\n  deposit,\n  withdraw,\n  requestLoan,\n  payLoan\n} = accountSlice.actions;\nexport default accountSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","balance","loan","loanPurpose","isLoading","accountSlice","name","reducers","deposit","state","action","payload","withdraw","requestLoan","amount","purpose","payLoan","console","log","actions","reducer"],"sources":["C:/Users/kuchbi/OneDrive/Desktop/REACTJS UDEMY COURSE/REACTJS/src/20 redux/features/accounts/accountSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// mordern way of redux toolskit\r\nconst initialState = {\r\n  balance: 0,\r\n  loan: 0,\r\n  loanPurpose: \"\",\r\n  isLoading: false,\r\n};\r\nconst accountSlice = createSlice({\r\n  name: \"account\",\r\n  initialState,\r\n  reducers: {\r\n    deposit(state, action) {\r\n      state.balance = state.balance + action.payload;\r\n    },\r\n    withdraw(state, action) {\r\n      state.balance -= action.payload;\r\n    },\r\n    requestLoan(state, action) {\r\n      if (state.loan > 0) return;\r\n      state.loan = action.payload.amount;\r\n      state.loanPurpose = action.payload.purpose;\r\n      state.balance = action.balance + action.payload.amount;\r\n    },\r\n    payLoan(state, action) {\r\n      if (state.loan > 0) return;\r\n      state.loanPurpose = \"\";\r\n      state.balance -= state.loan;\r\n      state.loan = 0;\r\n    },\r\n  },\r\n});\r\nconsole.log(accountSlice);\r\nexport const { deposit, withdraw, requestLoan, payLoan } = accountSlice.actions;\r\nexport default accountSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC;EACVC,IAAI,EAAE,CAAC;EACPC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE;AACb,CAAC;AACD,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC/BO,IAAI,EAAE,SAAS;EACfN,YAAY;EACZO,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrBD,KAAK,CAACR,OAAO,GAAGQ,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,QAAQA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACR,OAAO,IAAIS,MAAM,CAACC,OAAO;IACjC,CAAC;IACDE,WAAWA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACzB,IAAID,KAAK,CAACP,IAAI,GAAG,CAAC,EAAE;MACpBO,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO,CAACG,MAAM;MAClCL,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACC,OAAO,CAACI,OAAO;MAC1CN,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACT,OAAO,GAAGS,MAAM,CAACC,OAAO,CAACG,MAAM;IACxD,CAAC;IACDE,OAAOA,CAACP,KAAK,EAAEC,MAAM,EAAE;MACrB,IAAID,KAAK,CAACP,IAAI,GAAG,CAAC,EAAE;MACpBO,KAAK,CAACN,WAAW,GAAG,EAAE;MACtBM,KAAK,CAACR,OAAO,IAAIQ,KAAK,CAACP,IAAI;MAC3BO,KAAK,CAACP,IAAI,GAAG,CAAC;IAChB;EACF;AACF,CAAC,CAAC;AACFe,OAAO,CAACC,GAAG,CAACb,YAAY,CAAC;AACzB,OAAO,MAAM;EAAEG,OAAO;EAAEI,QAAQ;EAAEC,WAAW;EAAEG;AAAQ,CAAC,GAAGX,YAAY,CAACc,OAAO;AAC/E,eAAed,YAAY,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}